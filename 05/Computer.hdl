// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    // Instruction memory (ROM): Holds the program instructions
    ROM32K(address=pc, out=instruction);

    // Data memory (RAM) and screen memory (RAM[16384] to RAM[24575])
    RAM16K(in=outM, load=writeM, address=addressM, out=inM);

    // Memory-mapped I/O devices
    Screen(in=outM, load=writeM, address=addressM, out=inM);
    Keyboard(out=keyboardOut);

    // CPU: Executes instructions
    CPU(inM=inM, instruction=instruction, reset=reset,
        outM=outM, writeM=writeM, addressM=addressM, pc=pc);

    // Control logic for memory-mapped I/O
    Mux16(a=inM, b=keyboardOut, sel=isKeyboardAddress, out=inM);

    // Determine if the address corresponds to the keyboard or screen
    Or(a=isScreenAddress, b=isKeyboardAddress, out=isMappedIO);
    And(a=notMappedIO, b=addressM, out=ramAddres);
}
